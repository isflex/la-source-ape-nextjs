version: 1
applications:
  -
    backend:
      phases:
        # build:
        #   commands:
        #     - 'nvm install 20.15.0'
        #     - 'nvm use 20.15.0'
        #     - 'npm install --package-lock-only --dry-run'
        #     - 'npm ci --cache .npm --prefer-offline'
        #     - 'pwd'
        #     - 'npx ampx info'
        #     - 'npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID'
        preBuild:
          commands:
            - 'nvm install 20.15.0'
            - 'nvm use 20.15.0'
            # - 'npm install -g pnpm'
            - 'corepack enable'
            - 'corepack prepare pnpm@latest-9 --activate'
        build:
          commands:
            - 'pnpm install --frozen-lockfile'
            - 'pwd'
            - 'pnpm ampx info'
            - 'pnpm ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID --debug'
            # - npx --use-pnpm ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID --debug
            # - pnpm dlx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID --debug
      cache:
        paths:
          - .pnpm-store
          - 'node_modules/**/*'
    frontend:
      phases:
        preBuild:
          commands:
            - 'npm install -g pnpm'
        build:
          commands:
            - 'pnpm turbo run build --filter=gateway'
      artifacts:
        baseDirectory: .next
        files:
          - '**/*'
      cache:
        paths:
          - '.next/cache/**/*'
          - 'node_modules/**/*'
      buildPath: apps/gateway
    appRoot: apps/gateway
