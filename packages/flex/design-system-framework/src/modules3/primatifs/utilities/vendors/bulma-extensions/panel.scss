@use "sass:list";
@use "../../variables" as variables;
@use "../../mixins" as mixins;

$panel-font-size: variables.$size-normal !default;
$panel-margin: variables.$block-spacing !default;
$panel-item-border: 1px solid variables.$border !default;
$panel-radius: variables.$radius-large !default;
$panel-shadow: variables.$shadow !default;
$panel-heading-background-color: variables.$border !default;
$panel-heading-color: variables.$text-strong !default;
$panel-heading-line-height: 1.25 !default;
$panel-heading-padding: 0.75em 1em !default;
$panel-heading-radius: variables.$radius !default;
$panel-heading-size: 1.25em !default;
$panel-heading-weight: variables.$weight-bold !default;
$panel-tabs-font-size: 0.875em !default;
$panel-tab-border-bottom: 1px solid variables.$border !default;
$panel-tab-active-border-bottom-color: variables.$link-active-border !default;
$panel-tab-active-color: variables.$link-active !default;
$panel-list-item-color: variables.$text !default;
$panel-list-item-hover-color: variables.$link !default;
$panel-block-color: variables.$text-strong !default;
$panel-block-hover-background-color: variables.$background !default;
$panel-block-active-border-left-color: variables.$link !default;
$panel-block-active-color: variables.$link-active !default;
$panel-block-active-icon-color: variables.$link !default;
$panel-icon-color: variables.$text-light !default;
$panel-colors: variables.$colors !default;

.panel {
  border-radius: var(--panel-radius,  #{$panel-radius});
  box-shadow: var(--panel-shadow,  #{$panel-shadow});
  font-size: var(--panel-font-size,  #{$panel-font-size});

  &:not(:last-child) {
    margin-bottom: var(--panel-margin,  #{$panel-margin});
  }

  // Colors
  @each $name, $components in $panel-colors {
    $color: list.nth($components, 1);
    $color-invert: list.nth($components, 2);

    &.is-#{$name} {
      .panel-heading {
        // background-color: var(--#{$name});
        // color: var(--#{$name}-invert);

        background-color: var(#{'--flex-'}#{$name}, #{$color});
        color: var(#{'--flex-'}#{$name}-invert, #{$color-invert});
      }

      .panel-tabs a.is-active {
        // border-bottom-color: var(--#{$name});

        border-bottom-color: var(#{'--flex-'}#{$name}, #{$color});
      }

      .panel-block.is-active .panel-icon {
        // color: var(--#{$name});

        color: var(#{'--flex-'}#{$name}, #{$color});
      }
    }
  }
}

.panel-tabs,
.panel-block {
  &:not(:last-child) {
    border-bottom: var(--panel-item-border,  #{$panel-item-border});
  }
}

.panel-heading {
  background-color: var(--panel-heading-background-color,  #{$panel-heading-background-color});
  border-radius: var(--panel-radius,  #{$panel-radius}) var(--panel-radius,  #{$panel-radius}) 0 0;
  color: var(--panel-heading-color,  #{$panel-heading-color});
  font-size: var(--panel-heading-size,  #{$panel-heading-size});
  font-weight: var(--panel-heading-weight,  #{$panel-heading-weight});
  line-height: var(--panel-heading-line-height,  #{$panel-heading-line-height});
  padding: var(--panel-heading-padding,  #{$panel-heading-padding});
}

.panel-tabs {
  align-items: flex-end;
  display: flex;
  font-size: var(--panel-tabs-font-size,  #{$panel-tabs-font-size});
  justify-content: center;

  a {
    border-bottom: var(--panel-tab-border-bottom,  #{$panel-tab-border-bottom});
    margin-bottom: -1px;
    padding: 0.5em;

    // Modifiers
    &.is-active {
      border-bottom-color: var(--panel-tab-active-border-bottom-color,  #{$panel-tab-active-border-bottom-color});
      color: var(--panel-tab-active-color,  #{$panel-tab-active-color});
    }
  }
}

.panel-list {
  a {
    color: var(--panel-list-item-color,  #{$panel-list-item-color});

    &:hover {
      color: var(--panel-list-item-hover-color,  #{$panel-list-item-hover-color});
    }
  }
}

.panel-block {
  align-items: center;
  color: var(--panel-block-color,  #{$panel-block-color});
  display: flex;
  justify-content: flex-start;
  padding: 0.5em 0.75em;

  input[type="checkbox"] {
    // @include mixins.ltr-property("margin", 0.75em)
    margin-inline-end: 0.75em;
  }

  & > .control {
    flex-grow: 1;
    flex-shrink: 1;
    width: 100%;
  }

  &.is-wrapped {
    flex-wrap: wrap;
  }

  &.is-active {
    border-left-color: var(--panel-block-active-border-left-color,  #{$panel-block-active-border-left-color});
    color: var(--panel-block-active-color,  #{$panel-block-active-color});

    .panel-icon {
      color: var(--panel-block-active-icon-color,  #{$panel-block-active-icon-color});
    }
  }

  &:last-child {
    border-bottom-left-radius: var(--panel-radius,  #{$panel-radius});
    border-bottom-right-radius: var(--panel-radius,  #{$panel-radius});
  }
}

a.panel-block,
label.panel-block {
  cursor: pointer;

  &:hover {
    background-color: var(--panel-block-hover-background-color,  #{$panel-block-hover-background-color});
  }
}

.panel-icon {
  @include mixins.fa(1em, 1em);

  color: var(--panel-icon-color,  #{$panel-icon-color});

  // @include mixins.ltr-property("margin", 0.75em)
  margin-inline-end: 0.75em;

  .fa {
    font-size: inherit;
    line-height: inherit;
  }
}
