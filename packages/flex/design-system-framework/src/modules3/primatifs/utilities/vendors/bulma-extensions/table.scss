@use "sass:list";
@use "../../variables" as variables;
@use "../../mixins" as mixins;
@use "../../extends";

// @use "utilities" as bulvarUtilities

$table-color: variables.$text-strong !default;
$table-background-color: var(--scheme-main) !default;
$table-cell-border: 1px solid variables.$border !default;
$table-cell-border-width: 0 0 1px !default;
$table-cell-padding: 0.5em 0.75em !default;
$table-cell-heading-color: variables.$text-strong !default;
$table-cell-text-align: left !default;
$table-head-cell-border-width: 0 0 2px !default;
$table-head-cell-color: variables.$text-strong !default;
$table-foot-cell-border-width: 2px 0 0 !default;
$table-foot-cell-color: variables.$text-strong !default;
$table-head-background-color: transparent !default;
$table-body-background-color: transparent !default;
$table-foot-background-color: transparent !default;
$table-row-hover-background-color: var(--scheme-main-bis) !default;
$table-row-active-background-color: variables.$primary !default;
$table-row-active-color: variables.$primary-invert !default;
$table-striped-row-even-background-color: var(--scheme-main-bis) !default;
$table-striped-row-even-hover-background-color: var(--scheme-main-ter) !default;
$table-colors: variables.$colors !default;

.table {
  @extend %block;

  background-color: var(--table-background-color,  #{$table-background-color});
  color: var(--table-color,  #{$table-color});

  td,
  th {
    border: var(--table-cell-border,  #{$table-cell-border});
    border-width: var(--table-cell-border-width,  #{$table-cell-border-width});
    padding: var(--table-cell-padding,  #{$table-cell-padding});
    vertical-align: top;

    // Colors
    @each $name, $pair in $table-colors {
      $color: list.nth($pair, 1);
      $color-invert: list.nth($pair, 2);

      &.is-#{$name} {
        // background-color: var(--#{$name});
        // border-color: var(--#{$name});
        // color: var(--#{$name}-invert);

        background-color: var(#{'--flex-'}#{$name}, #{$color});
        border-color: var(#{'--flex-'}#{$name}, #{$color});
        color: var(#{'--flex-'}#{$name}-invert, #{$color-invert});
      }
    }

    // Modifiers
    &.is-narrow {
      white-space: nowrap;
      width: 1%;
    }

    &.is-selected {
      background-color: var(--table-row-active-background-color,  #{$table-row-active-background-color});
      color: var(--table-row-active-color,  #{$table-row-active-color});

      a,
      strong {
        color: currentcolor;
      }
    }

    &.is-vcentered {
      vertical-align: middle;
    }
  }

  th {
    color: var(--table-cell-heading-color,  #{$table-cell-heading-color});

    &:not([align]) {
      text-align: var(--table-cell-text-align,  #{$table-cell-text-align});
    }
  }

  tr {
    &.is-selected {
      background-color: var(--table-row-active-background-color,  #{$table-row-active-background-color});
      color: var(--table-row-active-color,  #{$table-row-active-color});

      a,
      strong {
        color: currentcolor;
      }

      td,
      th {
        border-color: var(--table-row-active-color,  #{$table-row-active-color});
        color: currentcolor;
      }
    }
  }

  thead {
    background-color: var(--table-head-background-color,  #{$table-head-background-color});

    td,
    th {
      border-width: var(--table-head-cell-border-width,  #{$table-head-cell-border-width});
      color: var(--table-head-cell-color,  #{$table-head-cell-color});
    }
  }

  tfoot {
    background-color: var(--table-foot-background-color,  #{$table-foot-background-color});

    td,
    th{
      border-width: var(--table-foot-cell-border-width,  #{$table-foot-cell-border-width});
      color: var(--table-foot-cell-color,  #{$table-foot-cell-color});
    }
  }

  tbody {
    background-color: var(--table-body-background-color,  #{$table-body-background-color});

    tr {
      &:last-child {
        td,
        th {
          border-bottom-width: 0;
        }
      }
    }
  }

  // Modifiers
  &.is-bordered {
    td,
    th {
      border-width: 1px;
    }

    tr {
      &:last-child {
        td,
        th {
          border-bottom-width: 1px;
        }
      }
    }
  }

  &.is-fullwidth{
    width: 100%;
  }

  &.is-hoverable {
    tbody{
      tr:not(.is-selected){
        &:hover{
          background-color: var(--table-row-hover-background-color,  #{$table-row-hover-background-color});
        }
      }
    }

    &.is-striped {
      tbody {
        tr:not(.is-selected) {
          &:hover {
            background-color: var(--table-row-hover-background-color,  #{$table-row-hover-background-color});

            &:nth-child(even){
              background-color: var(--table-striped-row-even-hover-background-color,  #{$table-striped-row-even-hover-background-color});
            }
          }
        }
      }
    }
  }

  &.is-narrow {
    td,
    th {
      padding: 0.25em 0.5em;
    }
  }

  &.is-striped {
    tbody {
      tr:not(.is-selected) {
        &:nth-child(even) {
          background-color: var(--table-striped-row-even-background-color,  #{$table-striped-row-even-background-color});
        }
      }
    }
  }
}

.table-container {
  @extend %block;
  @include mixins.overflow-touch;

  overflow: auto;
  overflow-y: hidden;
  max-width: 100%;
}
